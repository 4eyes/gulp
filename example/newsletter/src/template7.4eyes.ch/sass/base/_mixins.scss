
@mixin media($query) {
	@if $ignoreMediaQueries == 0 {
		@media (#{$query}) {
			@content;
		}
	}
}

@mixin 	svg-icon ($baseline: true, $height: 1em, $width: 1em, $background: true) {
	@if $baseline {
		position: relative;
		bottom: -0.125em;
	}
	@if $background {
		background: {
			repeat: no-repeat;
			size: 100%;
			position: center center;
		}
	}
	display: inline-flex;
	align-self: center;
	height: $height;
	width: $width;
}

/**
 * Hide visually
 *
 * See http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 * for discussion of different solutions
 */

@mixin visuallyhidden() {
	border: 0;
	clip: rect(0 0 0 0);
	height: 1px;
	margin: -1px;
	overflow: hidden;
	padding: 0;
	position: absolute;
	width: 1px;
}

@mixin visuallyhiddenReset() {
	clip: auto;
	height: auto;
	margin: 0;
	overflow: visible;
	position: static;
	width: auto;
}

@mixin visuallyhiddenFocusable() {
	@include visuallyhidden;

	&:focus,
	&:active {
		@include visuallyhiddenReset;
	}
}


/**
 * Lists with layout purpose
 */

@mixin resetList() {
	list-style: none;
	margin: 0;
	padding: 0;
}


/**
 * Replace text
 */

@mixin replaceText() {
	display: block;
	overflow: hidden;
	text-indent: 150%;
	white-space: nowrap;
}


/**
 * Better font rendering (on OS X)
 * http://maximilianhoffmann.com/posts/better-font-rendering-on-osx
 *
 * Usage:
 *
 * .var_dark_on_light {
 * 	@include fontSmoothing;
 * }
 * .var_light_on_dark {
 * 	@include fontSmoothingReset;
 * }
 */

@mixin fontSmoothing() {
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

@mixin fontSmoothingReset() {
	-webkit-font-smoothing: subpixel-antialiased;
	-moz-osx-font-smoothing: auto;
}


/**
 * Placeholder in input fields
 */

@mixin placeholder() {

	&::-webkit-input-placeholder {
		@content;
	}
	&:-moz-placeholder { // Firefox 18-
		@content;
	}
	&::-moz-placeholder { // Firefox 19+
		@content;
	}
	&:-ms-input-placeholder {
		@content;
	}
}
